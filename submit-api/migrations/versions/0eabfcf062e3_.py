""" Insert records into package_types, item_types, and package_item_types

Revision ID: 0eabfcf062e3
Revises: b573a1a7347f
Create Date: 2024-08-22 12:20:35.863982

"""
from datetime import datetime

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = '0eabfcf062e3'
down_revision = 'b573a1a7347f'
branch_labels = None
depends_on = None

management_plan = 'Management Plan'
management_plan_form = 'Management Plan Form'
consultation_records = 'Consultation Record(s)'
management_plan_submission = 'Management Plan Submission'


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    package_types = sa.Table(
        'package_types',
        sa.MetaData(),
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('name', sa.String),
        sa.Column('created_date', sa.DateTime, default=datetime.utcnow),
        sa.Column('created_by', sa.String, default='system'),
    )
    item_types = sa.Table(
        'item_types',
        sa.MetaData(),
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('name', sa.String),
        sa.Column('created_date', sa.DateTime, default=datetime.utcnow),
        sa.Column('created_by', sa.String, default='system'),
    )
    package_item_types = sa.Table(
        'package_item_types',
        sa.MetaData(),
        sa.Column('package_type_id', sa.Integer),
        sa.Column('item_type_id', sa.Integer),
        sa.Column('created_date', sa.DateTime, default=datetime.utcnow),
        sa.Column('created_by', sa.String, default='system'),
    )

    # Insert package types and retrieve IDs
    op.bulk_insert(package_types, [
        {'name': 'Management Plan', 'created_date': datetime.utcnow()},
    ])
    conn = op.get_bind()

    package_type_id = conn.execute(package_types.select().where(package_types.c.name == management_plan)).fetchone()[0]

    # Insert item types and retrieve IDs
    op.bulk_insert(item_types, [
        {'name': management_plan_form, 'created_date': datetime.utcnow()},
        {'name': consultation_records, 'created_date': datetime.utcnow()},
        {'name': management_plan_submission, 'created_date': datetime.utcnow()},
    ])

    item_type_ids = conn.execute(item_types.select().where(item_types.c.name.in_([management_plan_form, consultation_records, management_plan_submission]))).fetchall()

    # Insert package item types using retrieved IDs
    op.bulk_insert(package_item_types, [
        {'package_type_id': package_type_id, 'item_type_id': item_type_ids[0][0], 'created_date': datetime.utcnow()},
        {'package_type_id': package_type_id, 'item_type_id': item_type_ids[1][0], 'created_date': datetime.utcnow()},
        {'package_type_id': package_type_id, 'item_type_id': item_type_ids[2][0], 'created_date': datetime.utcnow()},
    ])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DELETE FROM package_item_types')
    op.execute('DELETE FROM item_types')
    op.execute('DELETE FROM package_types')
    # ### end Alembic commands ###
